#pragma checksum "C:\Arshad\CPIPROBACKUP_SHADAB\C3Spectra.APPositioningApp\C3Spectra.APPositioningApp\Views\Outdoor\OutdoorStep1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "61a39c286974e3923c49623d87ec1b4b991ad941"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Outdoor_OutdoorStep1), @"mvc.1.0.view", @"/Views/Outdoor/OutdoorStep1.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Outdoor/OutdoorStep1.cshtml", typeof(AspNetCore.Views_Outdoor_OutdoorStep1))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Arshad\CPIPROBACKUP_SHADAB\C3Spectra.APPositioningApp\C3Spectra.APPositioningApp\Views\_ViewImports.cshtml"
using C3Spectra.APPositioningApp;

#line default
#line hidden
#line 2 "C:\Arshad\CPIPROBACKUP_SHADAB\C3Spectra.APPositioningApp\C3Spectra.APPositioningApp\Views\_ViewImports.cshtml"
using C3Spectra.APPositioningApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"61a39c286974e3923c49623d87ec1b4b991ad941", @"/Views/Outdoor/OutdoorStep1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"24e3fda1ab15c46d2ecb6906f9762200afb544e0", @"/Views/_ViewImports.cshtml")]
    public class Views_Outdoor_OutdoorStep1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
#line 3 "C:\Arshad\CPIPROBACKUP_SHADAB\C3Spectra.APPositioningApp\C3Spectra.APPositioningApp\Views\Outdoor\OutdoorStep1.cshtml"
  
    ViewBag.Title = "OutdoorStep1";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(95, 12240, true);
            WriteLiteral(@"


<main>
    <div class=""main-inner"">
        <div class=""col-xs-12 pade-none header-tabs"">
            <div class=""container cutom-container"">
                <div class=""row"">
                    <ul class=""nav nav-tabs"">
                        <li class=""active"">
                            <a href=""http://45.63.16.67/~webchefz/devsites/Spectra/index.html#OutDoor"" data-toggle=""tab"">OutDoor</a>
                        </li>
                        <li>
                            <a href=""http://45.63.16.67/~webchefz/devsites/Spectra/index.html#inDoor"" data-toggle=""tab"">inDoor</a>
                        </li>
                        <li>
                            <a href=""http://45.63.16.67/~webchefz/devsites/Spectra/index.html#Settings"" data-toggle=""tab"">Settings</a>
                        </li>
                    </ul>
                </div>
            </div>

            <div class=""col-xs-12 pade-none tab-content "">
                <div class=""tab-pane active"" id=""OutDoor""");
            WriteLiteral(@">

                    <div id=""map"" style=""height:500px;width:100%;"">
                        <div class=""on-map-option-outer"" style=""z-index:1000;"">
                            <div class=""on-map-option-grid button-map-location"" onclick=""RecenterIcon();"">
                                <svg width=""145"" height=""180"" viewBox=""0 0 145 180"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                                    <g clip-path=""url()"">
                                        <path d=""M117.292 69H102.743C101.325 54.38 89.662 42.716 75.042 41.298V26.5H69.042V41.298C54.421 42.716 42.757 54.38 41.339 69H26.791V75H41.339C42.757 89.62 54.421 101.283 69.041 102.701V117.5H75.041V102.701C89.661 101.283 101.324 89.62 102.742 75H117.291V69H117.292ZM72.041 96.85C58.339 96.85 47.191 85.703 47.191 72C47.191 58.297 58.338 47.15 72.041 47.15C85.744 47.15 96.891 58.297 96.891 72C96.891 85.703 85.744 96.85 72.041 96.85Z"" fill=""black""></path>
                                        <path d=""M72.041 88.459C81.131");
            WriteLiteral(@"1 88.459 88.5 81.0901 88.5 72C88.5 62.91 81.1311 55.541 72.041 55.541C62.951 55.541 55.582 62.91 55.582 72C55.582 81.0901 62.951 88.459 72.041 88.459Z"" fill=""black""></path>
                                    </g>
                                    <defs>
                                        <clippath>
                                            <rect width=""144.083"" height=""180"" fill=""white""></rect>
                                        </clippath>
                                    </defs>
                                </svg>
                            </div>
                            <div class=""on-map-option-grid button-map-setting"">
                                <svg version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" onclick=""showCalculateDeclinationfn();"" xmlns:xlink=""http://www.w3.org/1999/xlink"" x=""0px"" y=""0px"" viewBox=""0 0 244 231"" style=""enable-background:new 0 0 244 231;"" xml:space=""preserve"">

                                <g id=""Background_xA0_Image_1_"">
               ");
            WriteLiteral(@"     </g>
                                <g id=""Rectangle_1_1_"" class=""st0"">
                                <g id=""Rectangle_1"">
                                <g>
                                <rect x=""121"" y=""23.6"" class=""st1"" width=""19.5"" height=""194.5""></rect>
                    </g>
                    </g>
                    </g>
                                <g id=""Rectangle_2_1_"" class=""st0"">
                                <g id=""Rectangle_2_3_"">
                                <g>
                                <rect x=""149.9"" y=""52.8"" class=""st1"" width=""29.2"" height=""19.5""></rect>
                    </g>
                    </g>
                    </g>
                                <g id=""Rectangle_2_copy_1_"" class=""st0"">
                                <g id=""Rectangle_2_copy_3_"">
                                <g>
                                <rect x=""149.9"" y=""169.5"" class=""st1"" width=""48.6"" height=""19.5""></rect>
                    </g>
                    ");
            WriteLiteral(@"</g>
                    </g>
                                <g id=""Rectangle_2_copy_2_1_"" class=""st0"">
                                <g id=""Rectangle_2_copy_2_3_"">
                                <g>
                                <rect x=""149.9"" y=""111.2"" class=""st1"" width=""68.1"" height=""19.5""></rect>
                    </g>
                    </g>
                    </g>
                                <g id=""Rectangle_2_copy_3_5_"" class=""st0"">
                                <g id=""Rectangle_2_copy_3"">
                                <g>
                                <rect x=""62.9"" y=""52.8"" class=""st1"" width=""48.6"" height=""19.5""></rect>
                    </g>
                    </g>
                    </g>
                                <g id=""Rectangle_2_copy_3_4_"" class=""st0"">
                                <g id=""Rectangle_2_copy_3_10_"">
                                <g>
                                <rect x=""72.6"" y=""169.5"" class=""st1"" width=""38.9"" height=""19.5""><");
            WriteLiteral(@"/rect>
                    </g>
                    </g>
                    </g>
                                <g id=""Rectangle_2_copy_3_3_"" class=""st0"">
                                <g id=""Rectangle_2_copy_3_2_"">
                                <g>
                                <rect x=""24"" y=""111.2"" class=""st1"" width=""87.5"" height=""19.5""></rect>
                    </g>
                    </g>
                    </g>
                    </svg>
                            </div>
                            <div class=""button-search-main"">
                                <div id=""Component_A28_Component_905"" class=""on-map-option-grid Component button-search-location"">
                                    <div id=""Search_Icon"" class=""hide"">
                                        <div id=""Search_Icon_A28_Group_671"">
                                            <svg class=""Search_Icon1 search-button"" viewBox=""0 0 16.172 15.973"">
                                                <path fil");
            WriteLiteral(@"l=""rgba(91,94,98,1)"" id=""Search_Icon1"" d=""M 10.06738758087158 11.1132984161377 C 7.501212596893311 13.13077545166016 3.812197685241699 12.82206916809082 1.617020845413208 10.40614891052246 C -0.5781553387641907 7.990230560302734 -0.5330569744110107 4.288596630096436 1.720328569412231 1.926875948905945 C 3.973711967468262 -0.4348436594009399 7.669152736663818 -0.6535825729370117 10.18541431427002 1.42581582069397 C 12.70167636871338 3.505215644836426 13.18313980102539 7.175682544708252 11.28829383850098 9.833694458007812 L 16.17192268371582 14.71732330322266 L 14.91579627990723 15.97344970703125 L 10.06738758087158 11.1132984161377 Z M 6.263791561126709 10.64371871948242 C 8.670387268066406 10.66719722747803 10.67784023284912 8.694963455200195 10.70131874084473 6.253148078918457 C 10.72401142120361 3.8023681640625 8.755658149719238 1.797223567962646 6.304879665374756 1.774531245231628 C 3.854100704193115 1.751838564872742 1.848955392837524 3.720191955566406 1.826263189315796 6.170970916748047 C 1.7910439968109");
            WriteLiteral(@"13 8.601047515869141 3.775018692016602 10.60850048065186 6.252051830291748 10.63197994232178 L 6.263791561126709 10.64371871948242 Z"">
                                                </path>
                                            </svg>
                                        </div>
                                        <svg class=""Rectangle_222"">
                                            <rect fill=""transparent"" id=""Rectangle_222"" rx=""0"" ry=""0"" x=""0"" y=""0"" width=""24"" height=""24"">
                                            </rect>
                                        </svg>
                                    </div>
                                    <div class=""close-button show"">
                                        <svg width=""48"" height=""48"" viewBox=""0 0 48 48"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                                            <g clip-path=""url(#clip0)"">
                                                <path d=""M28.228 23.986L47.092 5.12198C48.264 3.950");
            WriteLiteral(@"98 48.264 2.05098 47.092 0.879977C45.92 -0.292023 44.022 -0.292023 42.85 0.879977L23.986 19.744L5.121 0.879977C3.949 -0.292023 2.051 -0.292023 0.879 0.879977C-0.293 2.05098 -0.293 3.95098 0.879 5.12198L19.744 23.986L0.879 42.85C-0.293 44.021 -0.293 45.921 0.879 47.092C1.465 47.677 2.233 47.97 3 47.97C3.767 47.97 4.535 47.677 5.121 47.091L23.986 28.227L42.85 47.091C43.436 47.677 44.204 47.97 44.971 47.97C45.738 47.97 46.506 47.677 47.092 47.091C48.264 45.92 48.264 44.02 47.092 42.849L28.228 23.986Z"" fill=""black""></path>
                                            </g>
                                            <defs>
                                                <clipPath id=""clip0"">
                                                    <rect width=""47.971"" height=""47.971"" fill=""white""></rect>
                                                </clipPath>
                                            </defs>
                                        </svg>

                                    </div>
      ");
            WriteLiteral(@"                          </div>
                                <div class=""search_header show"">
                                    <div class=""search-input-icon"">
                                        <svg class=""search9"" viewBox=""0 0 16.172 15.973"">
                                            <path fill=""rgba(91,94,98,1)"" id=""search9"" d=""M 10.06738758087158 11.1132984161377 C 7.501212596893311 13.13077545166016 3.812197685241699 12.82206916809082 1.617020845413208 10.40614891052246 C -0.5781553387641907 7.990230560302734 -0.5330569744110107 4.288596630096436 1.720328569412231 1.926875948905945 C 3.973711967468262 -0.4348436594009399 7.669152736663818 -0.6535825729370117 10.18541431427002 1.42581582069397 C 12.70167636871338 3.505215644836426 13.18313980102539 7.175682544708252 11.28829383850098 9.833694458007812 L 16.17192268371582 14.71732330322266 L 14.91579627990723 15.97344970703125 L 10.06738758087158 11.1132984161377 Z M 6.263791561126709 10.64371871948242 C 8.670387268066406 10.66719722747803");
            WriteLiteral(@" 10.67784023284912 8.694963455200195 10.70131874084473 6.253148078918457 C 10.72401142120361 3.8023681640625 8.755658149719238 1.797223567962646 6.304879665374756 1.774531245231628 C 3.854100704193115 1.751838564872742 1.848955392837524 3.720191955566406 1.826263189315796 6.170970916748047 C 1.791043996810913 8.601047515869141 3.775018692016602 10.60850048065186 6.252051830291748 10.63197994232178 L 6.263791561126709 10.64371871948242 Z"">
                                            </path>
                                        </svg>
                                    </div>
                                    <label class=""search-input"" for=""searchtext10"" style=""display: none;""></label>
                                    <a class=""search-button"" href=""#"" title=""Search..."" style=""""></a>
                                    <input type=""text"" name=""Search Address"" placeholder=""Search Address"" class=""search_headr_top search-input"" id=""searchtext10""><i class=""show_div fa fa-search fa-flip-horizontal"" ar");
            WriteLiteral(@"ia-hidden=""true""></i>
                                </div>
                            </div>
                        </div>
                        <div class=""map-inner"" id=""divInnerButtons""  style=""z-index:1000"">
                            <div class=""add-cpe-button"">
                                <a href=""http://45.63.16.67/~webchefz/devsites/Spectra/index.html#"">
                                    <svg class=""Ellipse_118_A27_Ellipse_487"">
                                        <ellipse fill=""rgba(0,213,110,1)"" stroke=""rgba(255,255,255,1)"" stroke-width=""2.5px"" stroke-linejoin=""miter"" stroke-linecap=""butt"" stroke-miterlimit=""4"" shape-rendering=""auto"" id=""Ellipse_118_A27_Ellipse_487"" rx=""9"" ry=""9"" cx=""9"" cy=""9"">
                                        </ellipse>
                                    </svg> Add CPE
                                </a>
                            </div>
                            <div class=""add-cpe-button"">
");
            EndContext();
            BeginContext(35951, 179, true);
            WriteLiteral("                                <button type=\"button\" id=\"btnAddAP\">Add AP</button>\r\n                            </div>\r\n                            <div class=\"add-cpe-button\">\r\n");
            EndContext();
            BeginContext(36953, 46, true);
            WriteLiteral("                                <a href=\"#\">\r\n");
            EndContext();
            BeginContext(37707, 747, true);
            WriteLiteral(@"                                </a><button type=""button"" id=""btnAzimuthCalc"" class=""btn btn-warning"">Measure</button>
                            </div>
                        </div>

                        <div class=""map-inner floating-section"" id=""divDeclinationHatt"" style=""display:none;z-index:1000;"">
                            <div class=""access-Point-main"">
                                <button type=""button"" onclick=""closeHatt();"">
                                    ×
                                </button>
                                <div class=""container cutom-container"">
                                    <div id=""divCalculateDeclination"" style=""display:none"">


                                        ");
            EndContext();
            BeginContext(38455, 37, false);
#line 205 "C:\Arshad\CPIPROBACKUP_SHADAB\C3Spectra.APPositioningApp\C3Spectra.APPositioningApp\Views\Outdoor\OutdoorStep1.cshtml"
                                   Write(Html.Partial("_CalculateDeclination"));

#line default
#line hidden
            EndContext();
            BeginContext(38492, 1084, true);
            WriteLiteral(@"
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>





                    <div class=""location-info-main"">
                        <div class=""container cutom-container"">
                            <div class=""location-info-inner-out"">
                                <div class=""row"">
                                    <div class=""lake-image"">
                                        <img src=""images/lake-im1.png"" alt=""Image"" />
                                    </div>
                                    <div class=""location-info-right"">
                                        <h5>Piedmont Lake <span>• 270 ft</span></h5>
                                        <div class=""status-out"">
                                            Status: <span> Offline</span>
                                        </div>
                                        <div class=""stat");
            WriteLiteral("us-out\">\r\n                                            <ul>\r\n");
            EndContext();
            BeginContext(39757, 11673, true);
            WriteLiteral(@"                                                <li>Lat: <span id=""txtLatDown""></span></li>
                                                <li>Long: <span id=""txtLongDown""></span></li>
                                            </ul>
                                        </div>
                                        <div class=""col-xs-12 pade-none location-setting"">
                                            <span class=""setting-icon"" onclick=""manageParameters();"">
                                                <svg class=""Icon_ionic_ios_settings"" viewBox=""4.5 4.5 16.996 17"">
                                                    <path fill=""rgba(0,0,0,1)"" id=""Icon_ionic_ios_settings"" d=""M 20.09255409240723 12.99778842926025 C 20.09255409240723 12.0683422088623 20.6723518371582 11.27610111236572 21.49557495117188 10.95743370056152 C 21.27870559692383 10.05011749267578 20.92020416259766 9.200339317321777 20.44662666320801 8.430227279663086 C 20.16336822509766 8.554153442382812 19.86240577697754 8.62");
            WriteLiteral(@"0541572570801 19.55701637268066 8.620541572570801 C 18.99934959411621 8.620541572570801 18.44168090820312 8.408097267150879 18.01236534118652 7.983206748962402 C 17.35290336608887 7.32374382019043 17.20684623718262 6.354464530944824 17.56092071533203 5.54894495010376 C 16.79523658752441 5.075371265411377 15.94103050231934 4.716869831085205 15.03814125061035 4.5 C 14.72390079498291 5.318797588348389 13.92723274230957 5.90302038192749 12.99778842926025 5.90302038192749 C 12.0683422088623 5.90302038192749 11.27167415618896 5.318797588348389 10.95743370056152 4.5 C 10.05011749267578 4.716869831085205 9.200338363647461 5.075371265411377 8.43022632598877 5.548945426940918 C 8.788726806640625 6.350039005279541 8.63824462890625 7.32374382019043 7.978780746459961 7.983207702636719 C 7.553892135620117 8.408098220825195 6.991798400878906 8.620542526245117 6.434131622314453 8.620542526245117 C 6.128742218017578 8.620542526245117 5.827778816223145 8.558579444885254 5.544519424438477 8.430228233337402 C 5.075370788574219 9");
            WriteLiteral(@".204765319824219 4.716870307922363 10.05454349517822 4.5 10.96185874938965 C 5.31879711151123 11.27610111236572 5.903019905090332 12.0683422088623 5.903019905090332 13.00221252441406 C 5.903019905090332 13.93165874481201 5.323223114013672 14.72390079498291 4.504426002502441 15.04256629943848 C 4.721296310424805 15.94988250732422 5.07979679107666 16.79965972900391 5.553371429443359 17.56977272033691 C 5.836630821228027 17.44584655761719 6.137594223022461 17.38388252258301 6.438557624816895 17.38388252258301 C 6.996225357055664 17.38388252258301 7.553892135620117 17.59632682800293 7.983207702636719 18.02121543884277 C 8.63824462890625 18.67625427246094 8.788727760314941 19.64995956420898 8.434652328491211 20.45105361938477 C 9.204764366149902 20.92462921142578 10.05896949768066 21.28312873840332 10.96185970306396 21.5 C 11.27610111236572 20.68120002746582 12.0683422088623 20.10140419006348 12.99778842926025 20.10140419006348 C 13.92723274230957 20.10140419006348 14.71947479248047 20.68120002746582 15.0337162017");
            WriteLiteral(@"8223 21.5 C 15.94103050231934 21.28312873840332 16.79080963134766 20.92462921142578 17.56092071533203 20.45105361938477 C 17.20684623718262 19.64996147155762 17.35732841491699 18.6806812286377 18.01236534118652 18.02121543884277 C 18.437255859375 17.59632873535156 18.99492454528809 17.38388252258301 19.55701637268066 17.38388252258301 C 19.85798072814941 17.38388252258301 20.16336822509766 17.44584655761719 20.44220352172852 17.56977272033691 C 20.9157772064209 16.79965782165527 21.27427673339844 15.94545459747314 21.49114990234375 15.04256629943848 C 20.67677688598633 14.72390079498291 20.09255409240723 13.93165874481201 20.09255409240723 12.99778842926025 Z M 13.03762149810791 16.53410720825195 C 11.07693481445312 16.53410720825195 9.49687671661377 14.94519710540771 9.49687671661377 12.99336242675781 C 9.49687671661377 11.04152679443359 11.07693481445312 9.452617645263672 13.03762149810791 9.452617645263672 C 14.99830913543701 9.452617645263672 16.5783634185791 11.04152679443359 16.5783634185791 12.99336242");
            WriteLiteral(@"675781 C 16.5783634185791 14.94519710540771 14.99830913543701 16.53410720825195 13.03762149810791 16.53410720825195 Z"">
                                                    </path>
                                                </svg>
                                            </span>
                                            <span class=""wifi-icon"">
                                                <samp id=""Icon_ionic_ios_wifi"">
                                                    <svg class=""Path_310"" viewBox=""2.246 6.75 20 5.694"">
                                                        <path fill=""rgba(0,0,0,1)"" id=""Path_310"" d=""M 12.24186038970947 6.75 C 8.605938911437988 6.75 4.97001838684082 8.219999313354492 2.360186100006104 10.61312389373779 C 2.212964773178101 10.74437427520752 2.208503723144531 10.96749973297119 2.346802234649658 11.1118745803833 L 3.537956714630127 12.33249950408936 C 3.676255702972412 12.47687339782715 3.90824031829834 12.4812479019165 4.055461883544922 12.34562397003174 ");
            WriteLiteral(@"C 5.09493350982666 11.4006233215332 6.281626224517822 10.6481237411499 7.593234062194824 10.11437320709229 C 9.065447807312012 9.510623931884766 10.63134765625 9.208748817443848 12.2463207244873 9.208748817443848 C 13.86129188537598 9.208748817443848 15.4271936416626 9.514998435974121 16.89940643310547 10.11437320709229 C 18.21101570129395 10.65249919891357 19.39770698547363 11.4006233215332 20.43717956542969 12.34562397003174 C 20.58440017700195 12.4812479019165 20.81638526916504 12.47687339782715 20.95468330383301 12.33249950408936 L 22.14583778381348 11.1118745803833 C 22.28413581848145 10.97187328338623 22.2796745300293 10.74874973297119 22.1324520111084 10.61312389373779 C 19.51370239257812 8.219999313354492 15.87778091430664 6.75 12.24186038970947 6.75 Z"">
                                                        </path>
                                                    </svg>
                                                    <svg class=""Path_311"" viewBox=""7.789 14.85 12.948 4.242"">
              ");
            WriteLiteral(@"                                          <path fill=""rgba(0,0,0,1)"" id=""Path_311"" d=""M 7.89703893661499 17.75062370300293 L 9.172956466674805 18.98875045776367 C 9.311254501342773 19.11999893188477 9.529855728149414 19.12874984741211 9.672616958618164 19.00187301635742 C 10.93515014648438 17.90374755859375 12.55458545684814 17.29999732971191 14.26324558258057 17.29999732971191 C 15.9719066619873 17.29999732971191 17.59134101867676 17.89937400817871 18.85387229919434 19.00187301635742 C 18.99663543701172 19.12874984741211 19.21523475646973 19.11999893188477 19.35353469848633 18.98875045776367 L 20.62945175170898 17.75062370300293 C 20.77667236328125 17.60625076293945 20.77221298217773 17.37437438964844 20.61606788635254 17.23874855041504 C 18.94309997558594 15.75562381744385 16.7080135345459 14.84999942779541 14.25878429412842 14.84999942779541 C 11.80955600738525 14.84999942779541 9.574470520019531 15.75562381744385 7.901500225067139 17.23874855041504 C 7.754278182983398 17.37437438964844 7.749816417694092 1");
            WriteLiteral(@"7.60625076293945 7.89703893661499 17.75062370300293 Z"">
                                                        </path>
                                                    </svg>
                                                    <svg class=""Path_312"" viewBox=""13.67 22.795 5.495 4.016"">
                                                        <path fill=""rgba(0,0,0,1)"" id=""Path_312"" d=""M 16.41716575622559 22.79531097412109 C 15.37323474884033 22.79531097412109 14.42744922637939 23.22406196594238 13.76718425750732 23.91093826293945 C 13.6333475112915 24.05093765258789 13.63780879974365 24.26531028747559 13.77610683441162 24.40093803405762 L 16.15841293334961 26.70656204223633 C 16.30117416381836 26.84656143188477 16.53315925598145 26.84656143188477 16.67591857910156 26.70656204223633 L 19.05822944641113 24.40093803405762 C 19.1965274810791 24.26531410217285 19.20098876953125 24.05093765258789 19.0671501159668 23.91093826293945 C 18.40688323974609 23.22843551635742 17.46110153198242 22.79531097412109 16.417");
            WriteLiteral(@"16575622559 22.79531097412109 Z"">
                                                        </path>
                                                    </svg>
                                                </samp>
                                            </span>
                                            <span class=""edit-icon"">
                                                <svg class=""Icon_material_mode_edit"" viewBox=""4.5 4.496 16 16"">
                                                    <path fill=""rgba(0,89,178,1)"" id=""Icon_material_mode_edit"" d=""M 4.499999523162842 17.16338157653809 L 4.499999523162842 20.49625396728516 L 7.832871437072754 20.49625396728516 L 17.66261672973633 10.66650485992432 L 14.32974720001221 7.333633899688721 L 4.499999523162842 17.16338157653809 Z M 20.24003791809082 8.089085578918457 C 20.58665466308594 7.742465496063232 20.58665466308594 7.182543754577637 20.24003791809082 6.835924625396729 L 18.16032981872559 4.756214141845703 C 17.8137092590332 4.409594535827637 17.2");
            WriteLiteral(@"5378799438477 4.409594535827637 16.90716934204102 4.756214141845703 L 15.28072738647461 6.382654190063477 L 18.61359786987305 9.715527534484863 L 20.24003791809082 8.089085578918457 Z"">
                                                    </path>
                                                </svg>
                                            </span>
                                            <span class=""delete-icon"">
                                                <svg class=""Icon_material_delete"" viewBox=""7.5 4.5 13 16.714"" onclick=""ConfirmDialog()"">
                                                    <path fill=""rgba(226,43,43,1)"" id=""Icon_material_delete"" d=""M 8.428571701049805 19.35714340209961 C 8.428571701049805 20.37857055664062 9.264286041259766 21.21428680419922 10.28571319580078 21.21428680419922 L 17.71428871154785 21.21428680419922 C 18.73571586608887 21.21428680419922 19.57143020629883 20.37857055664062 19.57143020629883 19.35714340209961 L 19.57143020629883 8.214285850524902 L 8.4285717");
            WriteLiteral(@"01049805 8.214285850524902 L 8.428571701049805 19.35714340209961 Z M 20.5 5.428571701049805 L 17.25000190734863 5.428571701049805 L 16.3214282989502 4.5 L 11.67857074737549 4.5 L 10.75 5.428571701049805 L 7.499999523162842 5.428571701049805 L 7.499999523162842 7.285714626312256 L 20.5 7.285714626312256 L 20.5 5.428571701049805 Z"">
                                                    </path>
                                                </svg>
                                            </span>
                                        </div>



                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>




                </div>

                <span id=""lblDegree"" style=""display:none"">&#176;</span>

            </div>
        </div>
    </div>
    <input type=""hidden"" id=""hdnAPID"" value="""" />
    <input type=""hidden"" id=""hdnsector"" value="""" />
    <input type=""hidden");
            WriteLiteral(@""" id=""hdnAllAPSectorId"" value="""" />
</main>

<input type=""file"" id=""files"" name=""files"" onchange=""setfilename(this.value)"">
<div style=""display:none"">
    <div id=""divAPPopup"" style=""width:230px"">
        <div id=""divFirst"">
            <table style=""width:100%"">
                <tr>
                    <td style=""width:25%""><label class=""col-xs-6"">Latitude</label></td>
                    <td>
");
            EndContext();
            BeginContext(51582, 1623, true);
            WriteLiteral(@"                        <span id=""lblPopupLat"" class=""col-xs-6 form-control""></span>
                    </td>
                </tr>
                <tr style=""color:darkblue;"" id=""trExistingLat"">
                    <td style=""width:25%""><label class=""col-xs-6"">Existing Latitude</label></td>
                    <td>
                        <span id=""lblPopupExistingLat"" class=""col-xs-6 form-control""></span>
                    </td>
                </tr>
                <tr>
                    <td> <label class=""col-xs-6"">Longitude</label></td>
                    <td> <span id=""lblPopupLng"" class=""col-xs-6 form-control""></span></td>
                </tr>
                <tr style=""color:darkblue;"" id=""trExistingLng"">
                    <td style=""width:25%""><label class=""col-xs-6"">Existing Longitude</label></td>
                    <td>
                        <span id=""lblPopupExistingLng"" class=""col-xs-6 form-control""></span>
                    </td>
                </tr>
           ");
            WriteLiteral(@"     <tr>
                    <td> <label class=""col-xs-6"">Access PointName</label></td>
                    <td> <textarea rows=""1"" id=""txtPopupName"" class=""col-xs-6 form-control""></textarea></td>
                </tr>
                <tr>
                    <td> <label class=""col-xs-6"">Description</label></td>
                    <td> <textarea rows=""2"" id=""txtPopupDesc"" class=""col-xs-6 form-control""></textarea></td>
                </tr>

                <tr>

                    <td> <label class=""col-xs-6"">Add Image</label></td>

                    <td id=""tdfileUpload"">
");
            EndContext();
            BeginContext(53313, 170, true);
            WriteLiteral("\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td colspan=\"2\"> <a href=\"\" id=\"afilename\" target=\"_blank\"></a>  </td>\r\n");
            EndContext();
            BeginContext(53555, 128, true);
            WriteLiteral("                </tr>\r\n\r\n                <tr>\r\n\r\n                    <td> <label class=\"col-xs-6\">No of Sectors</label></td>\r\n\r\n");
            EndContext();
            BeginContext(58185, 26, true);
            WriteLiteral("                    <td>\r\n");
            EndContext();
            BeginContext(58268, 314, true);
            WriteLiteral(@"
                        <span id=""span1"" onclick=""getSect(1);"">First</span>
                        <span id=""span2"" onclick=""getSect(2);"">Second</span>
                        <span id=""span3"" onclick=""getSect(3);"">Third</span>
                        <span id=""span4"" onclick=""getSect(4);"">Fourth</span>

");
            EndContext();
            BeginContext(58764, 29, true);
            WriteLiteral("                    </td>\r\n\r\n");
            EndContext();
            BeginContext(58988, 145, true);
            WriteLiteral("\r\n                </tr>\r\n\r\n                <tr>\r\n\r\n                    <td colspan=\"2\" style=\"text-align:center; padding:10px;\" id=\"tdCtrls\">\r\n\r\n");
            EndContext();
            BeginContext(59422, 2911, true);
            WriteLiteral(@"

                        <input type=""button"" id=""lnkbtnNext"" onclick=""NextPopup();"" value=""Next"" />

                    </td>

                </tr>



            </table>
        </div>
        <div id=""divAPPopupNext"" style=""display:none"">
            <table style=""width:100%"" id=""tblAPPopupNext""></table>
        </div>

    </div>
</div>


<div id=""myModal"" class=""modal"">
    <div class=""outdoor-confirmation-popup"">
        <div class=""outdoor-access-out"">
            <h4>Confirmation </h4>
            <div class=""cutom-close-button"">
                <div id=""Group_619"">
                    <svg class=""Line_8"">
                        <path fill=""transparent"" stroke=""rgba(112,112,112,1)"" stroke-width=""1px"" stroke-linejoin=""miter"" stroke-linecap=""butt"" stroke-miterlimit=""4"" shape-rendering=""auto"" id=""Line_8"" d=""M 0 0 L 9 9"">
                        </path>
                    </svg>
                    <svg class=""Line_9"" onclick=""endPopup()"">
                        <path");
            WriteLiteral(@" fill=""transparent"" stroke=""rgba(112,112,112,1)"" stroke-width=""1px"" stroke-linejoin=""miter"" stroke-linecap=""butt"" stroke-miterlimit=""4"" shape-rendering=""auto"" id=""Line_9"" d=""M 9 0 L 0 9"">
                        </path>
                    </svg>
                </div>
            </div>
            <div class=""col-xs-12 pade-none outdoor-access-inner"">
                <div class=""are-you-sure-content"">
                    <p>Are you sure you want to delete this AP?</p>
                </div>
                <div class=""are-you-sure-button"">
                    <a href=""javascript:;"" class=""custom-button"" onclick=""Delete(false);"">No</a>
                    <a href=""javascript:;"" class=""custom-button"" onclick=""Delete(true);"">Yes</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""DeleteSectorModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""DeleteSectorModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
   ");
            WriteLiteral(@"     <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""DeleteSectorModalLabel"">Confirmation</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <p>Are you sure you want to delete Sectors?</p>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">No</button>
                <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"" id=""btnDeleteSector"">Yes</button>
            </div>
        </div>
    </div>
</div>

<div id=""Component_9"" class=""Component"" style=""display:none"">
");
            EndContext();
            BeginContext(62525, 136, true);
            WriteLiteral("    <div id=\"Lorem_ipsum_dol_light_A62_Text_1070\">\r\n        <span>Touch where you\'d like to drop the AP</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            EndContext();
            BeginContext(63789, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(64210, 13463, true);
            WriteLiteral(@"

<script type=""text/javascript"" charset=""UTF-8"">
    var geo = L.geoJson();
    var curLocation = [39.3985454, -107.3123854];
    var m = null;
    var lineLayer = null;
    var layerGroup = new L.LayerGroup();
    var originLat = 0;
    var originLng = 0;
    var imarkersLoad = 0;
    var marker = null;
    var azimuthLine=null;
    var isAzimuthCalcInProgress=false;
    var isAzimuthCalcInProgressFirst=false;
    var allMarkersObjArray = [];
    var imarkersArray=0;
    var azimuthStartAPLat = null;

    var azimuthStartAPLng = null;
    var restrictAzimuthLine=0;
    var azimuthEndAPLat = null;

    var azimuthEndAPLng = null;
    var aps = null;
    var apsector = null;
    var lineLayerNew = null;
    var markersLoad = [];
    var markersCreated = [];

    var marker = null;

    var imarkersCreated = 0;
    var cehckFirstAPOfOutdoor = false;
    var currentMarker;

    var currentDraggedMarkerStartLat = null;
    var currentDraggedMarkerStartLng = null;
    var fil");
            WriteLiteral(@"es = null;
    var sRetainControlValuesNext = null;
    var sRetainControlValuesBack = null;
    var isectorCounter = null;
    var fileName = null;
    var isNewAP = false;
    var isSectorDelete=false;
    var simagePath = null;
    var popupMarkup = $($('#divAPPopup').html()).on('click', '.lnkbtn', function () {
        var ctrl = $(this).attr('id');

        switch (ctrl) {
            case 'lnkbtnSave':
                SaveAPData();
                break;
            case 'lnkbtnDelete':
                Delete();
                break;
            case 'lnkbtnManageParameters':
                manageParameters();
                break;
            case 'btnShowCalculateDeclination':
                showCalculateDeclinationfn();
                break;
            case 'btnShowCalculateHAAT':
                showCalculateHAAT();
                break;
        }

    })[0];

    $(document).ready(function () {
        loadBaseMap();

        loadAPs();


        $('#btnA");
            WriteLiteral(@"ddAP').click(function (event) {

            var currentText = $(this).text();
            //alert(currentText);
            if (currentText == ""Add AP"") {
                $('#hdnsector').val(0);
                $(""#Component_A18_Component_423"").css(""display"", ""none"");
                $(""#Component_9"").css(""display"", ""block"");
                $(this).text(""Finish"");



                cehckFirstAPOfOutdoor = false;

                m.on('click', function (e) {
                    //alert(cehckFirstAPOfOutdoor);
                    if (cehckFirstAPOfOutdoor == true) {
                    //alert(currentText);
                    //if (currentText == ""Add AP"") {
                    //if (currentText == ""Add AP"") {
                    lat = e.latlng.lat;
                    lon = e.latlng.lng;
                    curLocation = [lat, lon];
                        isNewAP = true;
                    markersCreated = new L.marker(curLocation, {

                        draggable: 'true'
");
            WriteLiteral(@"
                    }).bindPopup(popupMarkup, { minWidth: 230, maxHeight: ""auto"" });

                    markersCreated.APID = 0;

                    $('#hdnAPID').val(0);

                    $('#lblPopupLat').text(lat);

                    $('#lblPopupLng').text(lon);

                    markersCreated.on('dragend', function (event) {

                        var startLat = currentDraggedMarkerStartLat;

                        var startLng = currentDraggedMarkerStartLng;

                        currentDraggedMarkerStartLat = null;

                        currentDraggedMarkerStartLng = null;

                        onAPDragEnd(event, this, startLat, startLng);

                    });

                    markersCreated.on('click', function (event) {  //new added
                        onAPClick(this);
                        $($(""#tdfileUpload"")[0]).append($(""#files"")[0]);
                    });

                    m.addLayer(markersCreated);
                    ima");
            WriteLiteral(@"rkersCreated++;
                    //cehckFirstAPOfOutdoor = false;

                    //Add a marker to show where you clicked.
                }
                    cehckFirstAPOfOutdoor = true;
            });

        }
           else if (currentText == ""Finish"") {

            $(this).text(""Add AP"");
            $(""#Component_A18_Component_423"").css(""display"", ""block"");
                $(""#Component_9"").css(""display"", ""none"");
              event.stopPropagation();
                cehckFirstAPOfOutdoor = false;
                isNewAP = false;

                m.removeLayer(markersCreated);//Added
                m.off('click');
            }
        });

        $('#btnback').click(function () {
            //window.location.href = ""../Home/IndoorStep1?buildingID=""+$('#hdnBuildingID').val();
            window.location.href = ""../Home/Dashboard"";

        });

    });



    function onAPDragEnd(event, obj, currentDraggedMarkerStartLat, currentDraggedMarkerStartLng) ");
            WriteLiteral(@"{



        var position = obj.getLatLng();



        originLat = convertUptoDecimal6(position.lat);

        originLng = convertUptoDecimal6(position.lng);

        if (lineLayerNew != null) {

            layerGroup.removeLayer(lineLayerNew);

        }





    }


    function onAPClick(obj) {

        //if(restrictAzimuthLine<2){
        setAzimthAPDetails(obj);
        var position = obj.getLatLng();
        position.lat = convertUptoDecimal6(position.lat);
        position.lng = convertUptoDecimal6(position.lng);

        $('#hdnLat').val(position.lat);

        $('#hdnLong').val(position.lng);

        $(""#txtLatDown"").text(position.lat);
        $(""#txtLongDown"").text(position.lng);

        if ($('#hdnAPID').val() == """")
            $('#hdnAPID').val(0);

        if (obj.Lat != undefined)
            obj.Lat = convertUptoDecimal6(obj.Lat);

        if (obj.Long != undefined)
            obj.Long = convertUptoDecimal6(obj.Long);

        if (obj.APID");
            WriteLiteral(@" != undefined && obj.APID != 0)
            $('#hdnAPID').val(obj.APID);

        if (obj.Lat != undefined)
            $('#lblPopupExistingLat').text(obj.Lat);

        if (obj.Long != undefined)
            $('#lblPopupExistingLng').text(obj.Long);

        if (obj.ImageSHPPath != undefined) {
            $('#afilename').text(obj.ImageSHPPath);
            //alert(obj.ImageSHPPath.replace('~/', '../'));
            //$('#afilename').attr('href',obj.ImageSHPPath.replace('~/','../'));
             $(afilename).attr(""href"", obj.ImageSHPPath.replace('~/', '../')); 
        }

        $('#hdnAPID').val(obj.APID);

        //isSectorClick = true;

        if (obj.Lat != undefined && obj.Long != undefined) {
            if (position.lat != obj.Lat) {

                $('#lblPopupLat').text(position.lat);

                $('#trExistingLat').show();

            }

            else {

                $('#lblPopupLat').text(obj.Lat);

                $('#trExistingLat').hide();

  ");
            WriteLiteral(@"          }



            if (position.lng != obj.Long) {

                $('#lblPopupLng').text(position.lng);

                $('#trExistingLng').show();

            }

            else {

                $('#lblPopupLng').text(obj.Long);

                $('#trExistingLng').hide();

            }
        }//End of  if(this.Lat!=undefined && this.Long!=undefined)

        else {
            $('#trExistingLat').hide();
            $('#trExistingLng').hide();

            $('#lblPopupLat').text(position.lat);

            $('#lblPopupLng').text(position.lng);
        }


        if (obj.Name != undefined && obj.Name != '') {
            //$('#txtPopupName').text(obj.Name);
            document.getElementById('txtPopupName').value = obj.Name;
        }
        else {
            //$('#txtPopupName').text('');
            document.getElementById('txtPopupName').value = """";
        }

        if (obj.Description != undefined && obj.Description != '') {
            //$");
            WriteLiteral(@"('#txtPopupDesc').text(obj.Description);
            document.getElementById('txtPopupDesc').value = obj.Description;
        }
        else {
            //$('#txtPopupDesc').text('');
            document.getElementById('txtPopupDesc').value = """";
        }

        currentMarker = obj;


        $(""#divFirst"").css(""display"", ""block"");
        obj.openPopup();

        //if(isAzimuthCalcInProgress||isAzimuthCalcInProgressFirst){
        if(isAzimuthCalcInProgress){
            obj.closePopup();
        }

        //}
        //else
        //{
        //    obj.closePopup();
        //}
    }

    function SaveAPData() {
        var apid = $('#hdnAPID').val();
        //var newlat = $('#lblPopupLat').text();
        //var newlong = $('#lblPopupLng').text();
        //alert(sRetainControlValuesNext);
        if (sRetainControlValuesNext.length > 0) {
            var splitValues = sRetainControlValuesNext.split('|');
            $('#txtPopupName').val(splitValues[0]);
       ");
            WriteLiteral(@"     $('#txtPopupDesc').val(splitValues[1]);
            $('#lblPopupLat').text(splitValues[2]);
            $('#lblPopupLng').text(splitValues[3]);
        }

        var newlat = $('#lblPopupLat').text();
        var newlong = $('#lblPopupLng').text();
        var name = $('#txtPopupName').val();
        var desc = $('#txtPopupDesc').val();

        var data = new FormData();
        data.append('type', files);
        data.append('apid', apid);
        data.append('newlat', newlat);
        data.append('newlong', newlong)
        data.append('name', name);
        data.append('desc', desc);

        if (files != null) {
            for (var i = 0; i < files.length; i++) {
                data.append(files[i].name, files[i]);
            }
        }
        else {
            //alert(simagePath);
            data.append('ImageSHPPath', simagePath);
        }

            $.ajax({

                url: ""../ManageAPParameters/ManageAPForOutdoor"",

                type: ""POST"",");
            WriteLiteral(@"

                contentType: false,
                processData: false,
                data: data,
                //data: {
                //    ""apid"": apid,

                //    ""newlat"": newlat,

                //    ""newlong"": newlong,

                //    ""name"": name,

                //    ""desc"": desc,
                //    ""img"":files

                success: function (data) {

                    if (data.Result) {
                        AddAPSector(data.APID);
                        //alert('AP saved successfully');

                        currentMarker.APID = data.APID;

                        currentMarker.Lat = newlat;

                        currentMarker.Long = newlong;

                        currentMarker.Name = name;

                        currentMarker.Description = desc;



                    }
                    else {
                        alert('Something went wrong');
                    }

                },

           ");
            WriteLiteral(@"     error: function (a, b, c) {

                    alert('An error occured. Please try after sometime');

                    //currentMarker = null;

                }

            });

        $(""#Component_A18_Component_423"").css(""display"", ""block"");
        $(""#Component_9"").css(""display"", ""none"");
    }

    function Delete(res) {



        //var res = confirm('Delete this AP?');



        if (res) {

            var apID = $('#hdnAPID').val();

            $.ajax({

                url: ""../ManageAPParameters/DeleteManageAPNew"",

                data: { ""apID"": apID },

                success: function (data) {

                    if (data.Result) {

                        //alert('AP deleted successfully');

                        m.closePopup();

                        //currentMarker = null;

                        m.removeLayer(currentMarker);

                    }

                },

                error: function (a, b, c) {

        ");
            WriteLiteral(@"            alert('An error occured. Please try after sometime');

                    //currentMarker = null;

                }

            });

        }
        $('#myModal').css('display', 'none');
    }

    function ConfirmDialog() {
        $('#myModal').css('display', 'block');
    }
    function endPopup() {
        $('#myModal').css('display', 'none');
    }

    function convertUptoDecimal6(digit) {
        var res = parseFloat(digit).toFixed(6);
        return res;
    }

    function convertUptoDecimal2(digit) {
        var res = parseFloat(digit).toFixed(2);
        return res;
    }

    function manageParameters() {
        //redirect user to Manage AP Parameters page
        var floor = 0;
        //window.location.href = ""../Home/ManageAPParameters?apid="" + $('#hdnAPID').val() + ""&lat="" + $('#lblPopupLat').text() + ""&lng="" + $('#lblPopupLng').text() + ""&floorID="" + floor;
        window.location.href = ""../ManageAPParameters/ManageAPParameters?apid="" + $('#");
            WriteLiteral("hdnAPID\').val() + \"&lat=\" + $(\'#lblPopupLat\').text() + \"&lng=\" + $(\'#lblPopupLng\').text() + \"&floorID=\" + floor;\r\n    }\r\n\r\n    function loadAPs() {\r\n\r\n");
            EndContext();
            BeginContext(77732, 12, true);
            WriteLiteral("       aps= ");
            EndContext();
            BeginContext(77745, 76, false);
#line 994 "C:\Arshad\CPIPROBACKUP_SHADAB\C3Spectra.APPositioningApp\C3Spectra.APPositioningApp\Views\Outdoor\OutdoorStep1.cshtml"
       Write(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.APs) as String));

#line default
#line hidden
            EndContext();
            BeginContext(77821, 21131, true);
            WriteLiteral(@";

        for (imarkersLoad = 0; imarkersLoad < aps.length; imarkersLoad++) {

            var curLoc = [aps[imarkersLoad].Lat, aps[imarkersLoad].Long];

            markersLoad[imarkersLoad] = new L.marker(curLoc, {

                draggable: 'true'

            }).bindPopup(popupMarkup,{minWidth:230,maxHeight:""auto""});

            markersLoad[imarkersLoad].APID = aps[imarkersLoad].APID;

            markersLoad[imarkersLoad].Lat = aps[imarkersLoad].Lat;

            markersLoad[imarkersLoad].Long = aps[imarkersLoad].Long;

            markersLoad[imarkersLoad].Name = aps[imarkersLoad].Name;

            markersLoad[imarkersLoad].Description = aps[imarkersLoad].Description;

            markersLoad[imarkersLoad].ImageSHPPath = aps[imarkersLoad].ImageSHPPath;

            markersLoad[imarkersLoad].listAPSector = aps[imarkersLoad].listAPSector;

            markersLoad[imarkersLoad].on('dragstart', function (event) {
                currentDraggedMarkerStartLat = this._latlng.lat;");
            WriteLiteral(@"
                currentDraggedMarkerStartLng = this._latlng.lng;
            });

            markersLoad[imarkersLoad].on('dragend', function (event) {
                var startLat = currentDraggedMarkerStartLat;
                var startLng = currentDraggedMarkerStartLng;
                currentDraggedMarkerStartLat = null;
                currentDraggedMarkerStartLng = null;
                onAPDragEnd(event,this,startLat,startLng);
            });





            markersLoad[imarkersLoad].on('click', function (event) {  //new added
                onAPClick(this);
                $($(""#tdfileUpload"")[0]).html($($(""#files"")[0]));
            });

            m.addLayer(markersLoad[imarkersLoad]);

        }

        imarkersLoad-=1;

    }



    function loadBaseMap() {
        /*------------------------------------------------- Generate Map on page load starts ------------------------------------------------*/
        //----------------

        //1) Get Tiles
      ");
            WriteLiteral(@"  var mbAttr = 'Map data &copy; <a href=""https://www.openstreetmap.org/"">OpenStreetMap</a> contributors, ' +
            '<a href=""https://creativecommons.org/licenses/by-sa/2.0/"">CC-BY-SA</a>, ' +
            'Imagery © <a href=""https://www.mapbox.com/"">Mapbox</a>',
            mbUrl = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';

        var grayscale = L.tileLayer.grayscale(mbUrl, { id: 'mapbox.light', attribution: mbAttr }),
            streets = L.tileLayer(mbUrl, { id: 'mapbox.streets', attribution: mbAttr });


        var watercolor = L.tileLayer.grayscale(mbUrl, { id: 'mapbox.light', attribution: mbAttr }, {
            maxZoom: 28,
            maxNativeZoom: 19
        });



        //create map on 'map' div at curLocation and zoom level 17 with Watercolor base map and geo layer
        m = L.map('map', {
              center: curLocation,
            zoom: 4,
            layers: [watercolor, geo]
        });
        m.locate({setView: true, maxZoom: 16
            ,watch:true");
            WriteLiteral(@"
        });

        //  .locate({ setView: true, maxZoom: 16,watch:true });







        layerGroup.addTo(m);

        var baseMaps = {
            ""BaseLayer"": watercolor
        };
        var overlays = {
            ""shapefile"": geo
        };
        L.control.layers(baseMaps, overlays).addTo(m);


        //Add Search box controller

        var searchControl = new L.Control.Search({
            url: 'https://nominatim.openstreetmap.org/search?format=json&q={s}',
            jsonpParam: 'json_callback',
            propertyName: 'display_name',
            propertyLoc: ['lat', 'lon'],
            //marker: L.circleMarker([0, 0], { radius: 30 }),
            autoCollapse: true,
            autoType: false,
            minLength: 2,
            zoom: 18
        })



        //searchControl.on('search:locationfound', function (e) {
        //    m.setZoom(18);
        //});

        //searchControl.on('search:locationfound', function (e) {
        //    m.setZ");
            WriteLiteral(@"oom(18);
        //});

        m.addControl(searchControl);

        /*----------------------------------------------- Generate Map on page load ends ----------------------------------------*/
    }

    function showCalculateDeclinationfn() {
        $('#var').html('');
        $('#lat').val($('#txtLatDown').text());
        $('#lon').val($('#txtLongDown').text());
        $('#divInnerButtons').css('display', 'none');
       // $('#modalPopupTitle').text('CPI Pro - Calculate Declination');
          $('#divDeclinationHatt').css('display', 'block');
        $('#divCalculateDeclination').css('display', 'block');

       

       

        //$(""#loginModal"").modal('show');
    }

      function closeHatt() {

       
          $('#divDeclinationHatt').css('display', 'none');
        $('#divCalculateDeclination').css('display', 'none');
        $('#divInnerButtons').css('display', 'block');
    }

</script>

<script>
    $(document).ready(function () {

        //$('#btnAzim");
            WriteLiteral(@"uthCalc').click(function () {

        //    var currentText = $(this).text();

        //    if (currentText == ""Calculate Azimuth"") {
        //        isAzimuthCalcInProgress = true;
        //        alert('Select Start AP');

        //        $(this).text(""Clear"");
        //    }
        //    else {
        //        clearAzimuth();
        //        $(this).text(""Calculate Azimuth"");
        //    }


        //});

        $('#btnAzimuthCalc').click(function () {
            var currentText = $(this).text();
            //if (currentText == ""Calculate Azimuth"") {
            //    isAzimuthCalcInProgress = true;
            //    alert('Select Start AP');

            //    $(this).text(""Clear"");
            //}
            //else {
            //    clearAzimuth();
            //    $(this).text(""Calculate Azimuth"");
            //}
            if (currentText == ""Measure"") {
                isAzimuthCalcInProgress = true;
                //alert('Select Start AP');");
            WriteLiteral(@"

                $(this).text(""Finish"");
            }
            else {
                clearAzimuth();
                $(this).text(""Measure"");
            }
        });
    });



    function clearAzimuth() {

        m.removeLayer(azimuthLine);

        isAzimuthCalcInProgress = false;


        azimuthStartAPLat = null;

        azimuthStartAPLng = null;

        azimuthEndAPLat = null;

        azimuthEndAPLng = null;
        restrictAzimuthLine = 0;

        $('#lblDegree').hide();

        setDefaultIconForAllMarkers();
    }

    function setDefaultIconForAllMarkers() {

        var markerscol = [];
        m.eachLayer(function (layer) {

            if (layer instanceof L.Marker) {
                markerscol.push(layer);
            }
        });

        var defaultAPIcon = L.icon({
            iconUrl: ""https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon.png""
        });

        for (var markeri = 0; markeri < markerscol.length; markeri++) {
");
            WriteLiteral(@"            markerscol[markeri].setIcon(defaultAPIcon);
        }
    }

    function setAzimthAPDetails(marker) {

        var pos = marker.getLatLng();

        //restrictAzimuthLine++;

        if (isAzimuthCalcInProgress) {
            if ((azimuthStartAPLat == null && azimuthStartAPLat == undefined) || (azimuthEndAPLat == null && azimuthEndAPLat == undefined)) {
                $('#divAzimuthCalculation').show();

                if (azimuthStartAPLat == null && azimuthStartAPLat == undefined) {

                    azimuthStartAPLat = convertUptoDecimal6(pos.lat);
                    azimuthStartAPLng = convertUptoDecimal6(pos.lng);

                    //set first AP color
                    var firstAPIcon = L.icon({
                        iconUrl: '../../images/marker-iconFirstAP.png'



                    });

                    marker.setIcon(firstAPIcon);


                }
                else {

                    azimuthEndAPLat = convertUptoDecimal6(pos.l");
            WriteLiteral(@"at);
                    azimuthEndAPLng = convertUptoDecimal6(pos.lng);

                    //set second AP color
                    var secondAPIcon = L.icon({
                        iconUrl: '../../images/marker-iconSecondAP.png'
                    });
                    isAzimuthCalcInProgressFirst = true;

                    marker.setIcon(secondAPIcon);


                }
                if (azimuthEndAPLat != null && azimuthStartAPLat != null) {
                    var point1 = turf.point([azimuthStartAPLng, azimuthStartAPLat]);
                    var point2 = turf.point([azimuthEndAPLng, azimuthEndAPLat]);

                    var bearing = turf.bearing(point1, point2);
                    var azimuth = turf.bearingToAzimuth(bearing);
                    azimuth = convertUptoDecimal2(azimuth);
                    var azimuthtext = azimuth + $('#lblDegree').html();

                    var latlang = [
                        [azimuthStartAPLat, azimuthStartAPLng], [azimut");
            WriteLiteral(@"hEndAPLat, azimuthEndAPLng]
                    ];
                    var azimuthLineOptions = { color: 'red', weight: 2, opacity: .7, dashArray: '10,5', lineJoin: 'round' };
                    azimuthLine = L.polyline(latlang, azimuthLineOptions);
                    azimuthLine.bindTooltip(azimuthtext, { permanent: true });
                    azimuthLine.addTo(m);

                }
            }
        }
    }
</script>

<script type=""text/javascript"">

    var isSectorClick = false;

    //function showCalculateDeclinationfn() {
    //    $('#var').html('');
    //    $('#lat').val($('#lblPopupLat').text());
    //    $('#lon').val($('#lblPopupLng').text());

    //    $('#modalPopupTitle').text('CPI Pro - Calculate Declination');

    //    $('#divCalculateDeclination').css('display', 'block');

    //    $('#divCalculateHAAT').css('display', 'none');

    //    $(""#loginModal"").modal('show');
    //}

    //function showCalculateHAAT() {
    //    $('#txtlat').val($('");
            WriteLiteral(@"#lblPopupLat').text());
    //    $('#txtlon').val($('#lblPopupLng').text());

    //    $('#modalPopupTitle').text('CPI Pro - Calculate HAAT');

    //    $('#divCalculateHAAT').css('display', 'block');

    //    $('#divCalculateDeclination').css('display', 'none');

    //    $(""#loginModal"").modal('show');
    //};


    $(document).ready(function () {



        //navigator.geolocation.getCurrentPosition(function(location) {
        //    alert('test');
        //    console.log(location.coords.latitude);
        //    console.log(location.coords.longitude);
        //    console.log(location.coords.accuracy);
        //});




        $(""#btnHideModal"").click(function () {

            $('#divCalculateHAAT').css('display', 'none');

            $('#divCalculateDeclination').css('display', 'none');

            $(""#loginModal"").modal('hide');

        });

    });


    function setfilename(val) {
        fileName = val.substr(val.lastIndexOf(""\\"") + 1, val.length");
            WriteLiteral(@");

        var fileUpload = $(""#files"").get(0);
        files = fileUpload.files;
    }


    function getSect(sec) {
        //if (sec < currentMarker.listAPSector.length) {
        //    //isSectorDelete = sec;
        //    $('#DeleteSectorModal').modal('show');
        //}
        //else {
        //    //alert('test');
        //    return false;
        //}
        $('#hdnsector').val(sec);
        isSectorClick = true;
    }

    function AddAPSector(APID) {
        var serialnumber = $('#txtSerialNo').val();
        var sAllAPSectorIds = $('#hdnAllAPSectorId').val();
        $('#divAPPopupNext').find('input[type=text][id^=""txtSector""]').each(function () {
            var ids = $(this).attr(""id"");
            var apsectorid = $('#hdnAPSECTORID_' + ids.replace('txtSector', '')).val();
            var apid = APID;
            var sectornumber = $(this).attr(""id"").replace('txtSector', '');
            var sectorvalue = $('#' + ids).val();
            sAllAPSectorIds = sAllAPS");
            WriteLiteral(@"ectorIds.replace(apsectorid + ',', '');
            //alert(sAllAPSectorIds);
            $.ajax({
                url: ""../ManageAPParameters/ManageAPSectorNew"",
                type: ""POST"",
                async: false,
                data: {
                    ""apsectorid"": apsectorid,

                    ""apid"": apid,

                    ""sectornumber"": sectornumber,

                    ""sectorvalue"": sectorvalue,

                    ""serialnumber"": serialnumber
                },



                success: function (data) {



                    if (data.Result) {



                        //alert('AP saved successfully');



                        //currentMarker.APID = data.APID;



                        //currentMarker.Lat = newlat;



                        //currentMarker.Long = newlong;



                        //currentMarker.Name = name;



                        //currentMarker.Description = desc;



                    }


");
            WriteLiteral(@"
                },



                error: function (a, b, c) {



                    alert('An error occured. Please try after sometime');



                    //currentMarker = null;



                }



            });



        });
        //alert(sAllAPSectorIds);
        if (isSectorDelete) {
            ReduceAPSector(sAllAPSectorIds);
            $('#hdnAllAPSectorId').val('');
            isSectorDelete = false;
        }
    }


    function NextPopup() {
        var allAPSectorID = '';
        isectorCounter = 0;
        if (isNewAP == false) {
            if (currentMarker.listAPSector.length > 0) {
                if (isSectorClick == false) {
                    $('#hdnsector').val(currentMarker.listAPSector.length);
                    isectorCounter = $('#hdnsector').val();
                }
            };
        }

        $($(""body"")[0]).append($(""#files"")[0]);
        sRetainControlValuesNext = $('#txtPopupName').val() + '|' + $('#t");
            WriteLiteral(@"xtPopupDesc').val() + '|' + $('#lblPopupLat').text() + '|' + $('#lblPopupLng').text();
        $(""#divFirst"").css(""display"", ""none"");

        $(""#divAPPopupNext"").css(""display"", ""block"");
        var htblAPPopupNext = $('#tblAPPopupNext').html('');
        if (isSectorClick) {
            isectorCounter = $('#hdnsector').val();
        }
        var stblAPPopupNext = null;
        var itrCounter = 0;
        if (isNewAP) {
            stblAPPopupNext = '<tr><td colspan=""2"">Access Point</td></tr> <tr style=""color:darkblue;""><td colspan=""2""><input id=""txtSerialNo"" type=""text"" /> </td></tr>'
        }
        else {
            if (currentMarker.listAPSector.length > 0) {
                stblAPPopupNext = '<tr><td colspan=""2"">Access Point</td></tr> <tr style=""color:darkblue;""><td colspan=""2""><input id=""txtSerialNo"" type=""text"" value=""' + currentMarker.listAPSector[0][""SerialNumber""] + '"" /> </td></tr>'
            }
        }
        for (var i = 0; i < isectorCounter; i++) {
            if (");
            WriteLiteral(@"itrCounter == 0) {
                stblAPPopupNext += '<tr style=""color:darkblue"">'
            }
            if (isNewAP) {
                stblAPPopupNext += '<td><input id=""txtSector' + (i + 1) + '"" type=""text"" placeholder=""sector' + (i + 1) + '"" /></td>'
            }
            else {
                if (currentMarker.listAPSector.length > 0) {
                    if (i < currentMarker.listAPSector.length) {
                        stblAPPopupNext += '<td><input id=""txtSector' + (i + 1) + '"" type=""text"" value=""' + currentMarker.listAPSector[i][""SectorValue""] + '"" placeholder=""sector' + (i + 1) + '"" /></td>'
                        stblAPPopupNext += '<input type=""hidden"" id=""hdnAPSECTORID_' + (i + 1) + '"" Value=""' + currentMarker.listAPSector[i][""APSectorId""] + '""/>'
                        allAPSectorID += currentMarker.listAPSector[i][""APSectorId""] + ',';
                    }
                    else {
                        stblAPPopupNext += '<td><input id=""txtSector' + (i + 1) + '"" ");
            WriteLiteral(@"type=""text"" placeholder=""sector' + (i + 1) + '"" /></td>'
                    }

                }
            }
            if (itrCounter == 1) {
                stblAPPopupNext += '</tr >'
            }
            itrCounter = itrCounter == 0 ? itrCounter + 1 : 0
            //itrCounter = itrCounter == 1 ? 0 : itrCounter;
        }
        if (isectorCounter == 1) {
            stblAPPopupNext += '</tr>'
        }

        stblAPPopupNext += '<tr> <td colspan=""2""><input type=""button"" id=""btnGoBack"" value=""Go Back"" onclick=""GoBackPopup();"" /> </td></tr>'
        stblAPPopupNext += '<tr><td colspan=""2""> <input type=""button"" id=""btnSave"" value=""Save"" onclick=""SaveAPData();"" /> </td></tr>'
        //stblAPPopupNext += '<tr><td colspan=""2""><span class=""lnkbtn"" id = ""lnkbtnSave""> Save</span></td></tr>'

        $('#tblAPPopupNext').html(stblAPPopupNext);
        allAPSectorID = allAPSectorID.replace(/,\s*$/, """");
        //alert(allAPSectorID);
        //alert($('#hdnAllAPSectorId').val())");
            WriteLiteral(@";
        if ($('#hdnAllAPSectorId').val() == '') {
            $('#hdnAllAPSectorId').val(allAPSectorID);
        }
        if (isNewAP) {
            markersCreated._popup.setContent($(""#divAPPopupNext"").html())
        }
        else {
            if (currentMarker.listAPSector.length > 0) {
                currentMarker._popup.setContent($(""#divAPPopupNext"").html())
            }
        }
        simagePath = $('#afilename').attr('href');
        //alert(simagePath);
        //markersCreated._popup.setContent($(""#divAPPopup"").html());
        //alert(sRetainControlValuesNext);
        if (isSectorClick) {
            if (sRetainControlValuesBack.length > 0) {
                var splitValues = sRetainControlValuesBack.split('|');
                $('#txtSerialNo').val(splitValues[0]);
                //$('#txtSector1').val(splitValues[1]);
                //$('#txtSector2').val(splitValues[2]);
                //$('#txtSector3').val(splitValues[3]);
            }

        }

    ");
            WriteLiteral(@"    else {
            if (sRetainControlValuesBack.length > 0) {
                var splitValues = sRetainControlValuesBack.split('|');
                $('#txtSerialNo').val(splitValues[0]);
                for (var r = 1; r <= isectorCounter; r++) {
                    $('#txtSector' + r).val(splitValues[r]);  // To DO
                }

            }
        }

        //isSectorClick = false;
    }



    function GoBackPopup() {

        sRetainControlValuesBack = $('#txtSerialNo').val() + '|' + $('#txtSector1').val() + '|' + $('#txtSector2').val() + '|' + $('#txtSector3').val();
        $('#trExistingLat').hide();
        isSectorClick = false;//Added
        $('#trExistingLng').hide();
        $(""#divAPPopupNext"").css(""display"", ""none"");
        $(""#divFirst"").css(""display"", ""block"");
        if (isNewAP) {
            markersCreated._popup.setContent($(""#divFirst"").html())
        }
        else {
            if (currentMarker.listAPSector.length > 0) {
                cur");
            WriteLiteral(@"rentMarker._popup.setContent($(""#divFirst"").html())
            }
        }
        $($(""#tdfileUpload"")[0]).append($(""#files"")[0]);

        //markersCreated._popup.setContent($(""#divAPPopup"").html());
        if (sRetainControlValuesNext.length > 0) {
            var splitValues = sRetainControlValuesNext.split('|');
            $('#txtPopupName').val(splitValues[0]);
            $('#txtPopupDesc').val(splitValues[1]);
        }
        $('#afilename').text(currentMarker.ImageSHPPath);

        $('#lblPopupLat').text(currentMarker.Lat);
        $('#lblPopupLng').text(currentMarker.Long);

        if (fileName.length > 0) {
            $('#filename').html(fileName);
        }
    }


    $('#btnDeleteSector').click(function () {
        isSectorDelete = true;
    });

    function ReduceAPSector(apSectorId) {
        //alert(apSectorId);
        var apID = $('#hdnAPID').val();

        $.ajax({

            url: ""../ManageAPParameters/ReduceManageAPNew"",

            data: {");
            WriteLiteral(@" ""apID"": apID, ""apSectorId"": apSectorId },

            success: function (data) {
                if (data.Result) {
                    alert('APSector deleted successfully');
                    //m.removeLayer(currentMarker);
                }
            },
            error: function (a, b, c) {
                alert('An error occured. Please try after sometime');
            }
        });
    }

    function RecenterIcon() {
        //map = L.map('map', {doubleClickZoom: false}).locate({setView: true, maxZoom: 16});
         m.locate({setView: true, maxZoom: 16,watch:true}); //to work need https enable 
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
